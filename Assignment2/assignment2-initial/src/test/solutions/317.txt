Program([VarDecl(Id(LOOP_COUNT), NumberType, None, NumLit(0.0)), FuncDecl(Id(toAsciiCode), [VarDecl(Id(s), StringType, None, None)], Block([VarDecl(Id(ascii), ArrayType([96.0], StringType), None, ArrayLit(StringLit( ), StringLit(!), StringLit('"), StringLit(#), StringLit($), StringLit(%), StringLit(&), StringLit(\'), StringLit((), StringLit()), StringLit(*), StringLit(+), StringLit(,), StringLit(-), StringLit(.), StringLit(/), StringLit(0), StringLit(1), StringLit(2), StringLit(3), StringLit(4), StringLit(5), StringLit(6), StringLit(7), StringLit(8), StringLit(9), StringLit(:), StringLit(;), StringLit(<), StringLit(=), StringLit(>), StringLit(?), StringLit(@), StringLit(A), StringLit(B), StringLit(C), StringLit(D), StringLit(E), StringLit(F), StringLit(G), StringLit(H), StringLit(I), StringLit(J), StringLit(K), StringLit(L), StringLit(M), StringLit(N), StringLit(O), StringLit(P), StringLit(Q), StringLit(R), StringLit(S), StringLit(T), StringLit(U), StringLit(V), StringLit(W), StringLit(X), StringLit(Y), StringLit(Z), StringLit([), StringLit(\\), StringLit(]), StringLit(^), StringLit(_), StringLit(`), StringLit(a), StringLit(b), StringLit(c), StringLit(d), StringLit(e), StringLit(f), StringLit(g), StringLit(h), StringLit(i), StringLit(j), StringLit(k), StringLit(l), StringLit(m), StringLit(n), StringLit(o), StringLit(p), StringLit(q), StringLit(r), StringLit(s), StringLit(t), StringLit(u), StringLit(v), StringLit(w), StringLit(x), StringLit(y), StringLit(z), StringLit({), StringLit(|), StringLit(}), StringLit(~), StringLit())), VarDecl(Id(i), NumberType, None, NumLit(0.0)), For(Id(i), BinaryOp(==, Id(s), ArrayCell(Id(ascii), [Id(i)])), NumLit(1.0), AssignStmt(Id(i), BinaryOp(+, Id(i), NumLit(1.0)))), Return(BinaryOp(+, Id(i), NumLit(32.0)))])), FuncDecl(Id(doNoThing), [VarDecl(Id(n), NumberType, None, None)], Return(Id(n))), FuncDecl(Id(main), [], Block([VarDecl(Id(i), NumberType, None, NumLit(0.0)), If((BinaryOp(=, BinaryOp(%, CallExpr(Id(toAsciiCode), [StringLit(a)]), NumLit(3.0)), NumLit(0.0)), If((BinaryOp(=, CallExpr(Id(toAssciiCode), [StringLit(b)]), BinaryOp(*, CallExpr(Id(doNoThing), [BinaryOp(/, CallExpr(Id(toAsciiCode), [StringLit(b)]), NumLit(3.0))]), NumLit(3.0))), For(Id(i), BinaryOp(<=, Id(i), CallExpr(Id(doNoThing), [NumLit(3.0)])), NumLit(1.0), AssignStmt(Id(LOOP_COUNT), BinaryOp(-, Id(LOOP_COUNT), UnaryOp(-, UnaryOp(-, UnaryOp(-, NumLit(1.0)))))))), [(BinaryOp(=, CallExpr(Id(toAsciiCode), [StringLit(c)]), Id(i)), If((BinaryOp(=, BinaryOp(%, BinaryOp(*, BinaryOp(*, Id(i), Id(i)), Id(i)), NumLit(128.0)), CallExpr(Id(toAsciiCode), [StringLit(H)])), For(Id(i), BinaryOp(<=, Id(i), CallExpr(Id(doNoThing), [NumLit(100.0)])), NumLit(1.0), If((BooleanLit(True), AssignStmt(Id(LOOP_COUNT), BinaryOp(-, BinaryOp(+, Id(LOOP_COUNT), NumLit(1.0)), BinaryOp(*, NumLit(2.0), NumLit(0.0))))), [], For(Id(i), BinaryOp(<=, Id(i), CallExpr(Id(doNoThing), [NumLit(100.0)])), NumLit(1.0), If((BooleanLit(True), AssignStmt(Id(LOOP_COUNT), BinaryOp(-, BinaryOp(+, Id(LOOP_COUNT), NumLit(1.0)), BinaryOp(*, NumLit(2.0), NumLit(0.0))))), [], AssignStmt(Id(i), BinaryOp(-, NumLit(1.0), UnaryOp(-, Id(i))))))))), [(BooleanLit(False), AssignStmt(Id(i), CallExpr(Id(toAsciiCode), [StringLit(1)])))], AssignStmt(Id(i), NumLit(0.0)))), (BooleanLit(True), AssignStmt(Id(i), NumLit(1.0)))], None)), [], None)]))])