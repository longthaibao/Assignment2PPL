Program([FuncDecl(Id(integral), [VarDecl(Id(a), NumberType, None, None), VarDecl(Id(b), NumberType, None, None), VarDecl(Id(c), NumberType, None, None)], Return(BinaryOp(-, BinaryOp(*, Id(c), Id(b)), BinaryOp(*, Id(c), Id(a))))), FuncDecl(Id(sin), [VarDecl(Id(x), NumberType, None, None), VarDecl(Id(degree), BoolType, None, None), VarDecl(Id(exactrate), NumberType, None, None)], Block([VarDecl(Id(pi), None, var, NumLit(3.141592653589793)), If(Id(degree), AssignStmt(Id(x), BinaryOp(/, BinaryOp(*, Id(x), Id(pi)), NumLit(180.0)))), [], None, AssignStmt(Id(x), BinaryOp(%, Id(x), BinaryOp(*, NumLit(2.0), Id(pi)))), VarDecl(Id(pow), NumberType, None, Id(x)), VarDecl(Id(i), None, dynamic, NumLit(1.0)), VarDecl(Id(fact), None, dynamic, NumLit(1.0)), VarDecl(Id(res), None, dynamic, BinaryOp(*, NumLit(2.0), Id(x))), For(Id(i), BinaryOp(=, Id(i), Id(exactrate)), NumLit(2.0), Block([AssignStmt(Id(res), BinaryOp(-, Id(res), BinaryOp(/, Id(pow), Id(fact)))), AssignStmt(Id(pow), BinaryOp(*, BinaryOp(*, Id(pow), Id(x)), Id(X))), AssignStmt(Id(fact), BinaryOp(*, BinaryOp(*, Id(fact), Id(i)), BinaryOp(-, Id(i), NumLit(1.0))))])), Return(Id(res))])), FuncDecl(Id(main), [], Block([VarDecl(Id(n1), None, var, NumLit(1.0)), VarDecl(Id(n2), None, var, NumLit(2.0)), VarDecl(Id(n3), None, var, NumLit(3.0)), VarDecl(Id(n4), None, var, NumLit(4.0)), VarDecl(Id(b1), None, var, BooleanLit(True)), VarDecl(Id(b2), None, var, Id(fasle)), VarDecl(Id(b3), None, var, UnaryOp(not, BooleanLit(True))), VarDecl(Id(b4), None, var, BinaryOp(or, BooleanLit(True), BooleanLit(False))), VarDecl(Id(res), None, dynamic, None), AssignStmt(Id(res), BinaryOp(and, BinaryOp(or, BinaryOp(>, CallExpr(Id(integral), [BinaryOp(-, BinaryOp(+, BinaryOp(/, BinaryOp(%, BinaryOp(*, BinaryOp(-, BinaryOp(+, BinaryOp(*, Id(n1), NumLit(2.0)), BinaryOp(*, BinaryOp(*, NumLit(2.0), Id(n1)), Id(n2))), BinaryOp(*, Id(n3), UnaryOp(-, Id(n4)))), Id(n1)), Id(n2)), Id(n3)), Id(n4)), BinaryOp(*, UnaryOp(-, Id(n1)), CallExpr(Id(sin), [NumLit(3.14), BooleanLit(False), NumLit(701.0)])))]), CallExpr(Id(sin), [BinaryOp(-, BinaryOp(*, Id(n1), Id(n2)), BinaryOp(%, Id(n3), Id(n4))), BinaryOp(=, Id(n1), BinaryOp(+, BinaryOp(-, BinaryOp(*, Id(n2), NumLit(3.0)), Id(n4)), CallExpr(Id(sin), [Id(n1), BinaryOp(>, Id(n2), Id(n3)), BinaryOp(%, BinaryOp(*, NumLit(701.0), Id(n2)), NumLit(1.0))]))), NumLit(701.0)])), BinaryOp(or, BinaryOp(and, BinaryOp(and, UnaryOp(not, Id(b1)), Id(b2)), UnaryOp(not, Id(b3))), Id(b4))), BinaryOp(and, BinaryOp(or, BinaryOp(and, Id(b1), UnaryOp(not, Id(b4))), Id(b3)), UnaryOp(not, Id(b2)))))]))])